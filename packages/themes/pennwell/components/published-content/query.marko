import { getAsArray, getAsObject } from '@base-cms/object-path';
import queryFragment from '../../api/fragments/all-published-content';

$ const pageNumber = input.pageNumber || 1;
$ input.query = getAsObject(input, 'query');
$ const contentTypes = getAsArray(input.query, 'contentTypes');
$ const { beginningAfter, beginningBefore } = input.query;
$ const { endingAfter, endingBefore } = input.query;
$ const layout = input.layout || 'grid';

$ const query = {
  contentTypes,
  beginningAfter,
  beginningBefore,
  endingAfter,
  endingBefore,
  limit: 9,
  ...input.query,
  queryFragment,
};

$ const getProps = (layout) => {
  switch (layout) {
    case 'webinar':
      return { companyPrefix: 'Sponsored by: ', withCompanyImage: true, withStarts: true };
    case 'event':
      return { withStarts: true, withEnds: true };
    case 'whitepaper':
      return { companyPrefix: 'Sponsored by: ', withCompanyImage: true };
    default:
      return {};
  };
};

$ const listProps = getProps(layout);

<cms-query-all-published-content|{ nodes, pageInfo }| ...query>
  $ const { endCursor, hasNextPage } = pageInfo;
  $ query.after = endCursor;
  $ delete query.queryFragment;
  $ const loadMore = { endCursor, hasNextPage, provide: { layout, query } };
  <if(layout === "grid")>
    <endeavor-content-block-card-grid nodes=nodes cols=3 />
  </if>
  <else>
    <div class=['content-query-section-list', 'content-query-section-list--vertical']>
      <endeavor-content-block-vertical-list
        header=input.header
        nodes=nodes
        withImage=true
        ...listProps
      />
    </div>
  </else>
  <${input.renderBody} nodes=nodes load-more=loadMore />
</cms-query-all-published-content>
