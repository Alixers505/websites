import { getAsObject } from '@base-cms/object-path';
import { buildImgixUrl } from '@base-cms/image';
import contentListFragment from '../../../api/fragments/content-list';
import { useNativeX } from '../../../services/native-x';

$ const { site } = out.global;
$ const block = 'content-query-related';
$ const params = {
  limit: 5,
  ...input,
  queryFragment: contentListFragment,
  queryName: 'QueryRelated',
};
$ const header = input.header || 'Related Content';
$ const nativeX = getAsObject(input, 'nativeX');
$ const nativeXEnabled = useNativeX(site, {
  name: nativeX.placement,
  index: nativeX.index,
  aliases: nativeX.aliases,
});
$ const imageOptions = { w: 120, h: 120, fit: 'crop', crop: 'focalpoint', fpX: 0.5, fpY: 0.5 };

<cms-query-website-scheduled-content|{ nodes }| ...params>
  <if(nodes.length)>
    <div class=block>
      <endeavor-item-list flush=true card=true items=nodes>
        <if(header)>
          <@header>
            ${header}
          </@header>
        </if>
        <@item|{ item, index }|>
          <if(nativeXEnabled && index === nativeX.index)>
            <endeavor-content-nativex-item
              placement=nativeX.placement
              aliases=nativeX.aliases
              content=item
              image-options=imageOptions
            />
          </if>
          <else>
            <endeavor-content-block-item
              content=item
              image-position="right"
              image-options=imageOptions
              image-width=75
              image-height=75
            />
          </else>
        </@item>
      </endeavor-item-list>
    </div>
  </if>
</cms-query-website-scheduled-content>
