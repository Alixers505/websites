import gql from 'graphql-tag';

$ const queryFragment = gql`
  fragment ContentBlockQuerySectionListFragment on Content {
    id
    type
    shortName
    teaser(input: { maxLength: 500, useFallback: false, truncatedSuffix: "" })
    canonicalPath
    published
    company {
      id
      type
      name
      canonicalPath
    }
    primarySection {
      id
      name
      fullName
      canonicalPath
    }
    primaryImage {
      id
      src
      alt
    }
    ... on Authorable {
      authors {
        edges {
          node {
            id
            name
            type
            canonicalPath
          }
        }
      }
    }
  }
`;

$ const block = 'content-query-section-list';
$ const mod = input.horizontal ? 'horizontal' : 'vertical';
$ const params = {
  limit: 4,
  requiresImage: true,
  ...input,
  queryFragment,
};

<cms-query-website-scheduled-content|{ nodes }| ...params>
  <if(nodes.length)>
    <div class=[block, `${block}--${mod}`]>
      <if(input.horizontal)>
        <endeavor-content-block-horizontal-list modifiers=["flexible"] header=input.header with-teaser=true nodes=nodes />
      </if>
      <else>
        <endeavor-content-block-vertical-list header=input.header with-card=true nodes=nodes />
      </else>
    </div>
  </if>
</cms-query-website-scheduled-content>
