import gql from 'graphql-tag';
import { asArray, asObject } from '@base-cms/utils';

$ const queryFragment = gql`
  fragment ContentBlockQueryHeroFragment on Content {
    id
    type
    shortName
    teaser(input: { maxLength: 500, useFallback: false, truncatedSuffix: "" })
    canonicalPath
    published
    company {
      id
      type
      name
      canonicalPath
    }
    primarySection {
      id
      name
      fullName
      canonicalPath
    }
    primaryImage {
      id
      src
      alt
    }
    ... on Authorable {
      authors {
        edges {
          node {
            id
            name
            type
            canonicalPath
          }
        }
      }
    }
  }
`;

$ const block = 'content-query-hero';
$ const params = {
  limit: 5,
  ...input,
  queryFragment,
};

<cms-query-website-scheduled-content|{ nodes }| ...params>
  $ const heroNode = asObject(nodes[0]);
  $ const listNodes = asArray(nodes.slice(1))
  <if(nodes.length)>
    <div class=block>
      <div class="row">
        <if(heroNode.id)>
          <div class=`${block}__main`>
            <endeavor-content-block-card modifiers=["hero-card", "flexible"] content=heroNode lazyload=false with-teaser=true />
          </div>
        </if>
        <if(listNodes.length)>
          <div class=`${block}__list`>
            <endeavor-content-block-list-group-card modifiers=["flexible"] with-image=false nodes=listNodes />
          </div>
        </if>
      </div>
    </div>
  </if>
</cms-query-website-scheduled-content>
