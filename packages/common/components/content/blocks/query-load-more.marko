import { getAsObject } from '@base-cms/object-path';
import { asArray, asObject } from '@base-cms/utils';
import { buildImgixUrl } from '@base-cms/image';
import contentListFragment from '../../../api/fragments/content-list';
import { useNativeX } from '../../../services/native-x';

$ const { site } = out.global;
$ const pageNumber = input.pageNumber || 1;
$ const block = 'content-query-load-more';
$ const query = {
  ...input.query,
  limit: 15,
  queryFragment: contentListFragment,
};

$ const loadMore = {
  ...input.loadMore,
};

$ const section = asObject(input.section);
$ const adCardInput = {
  section: { hierarchy: section.hierarchy },
  name: 'load-more',
  size: [300, 250],
  modifiers: ['in-card'],
  ...getAsObject(input, 'ads.card'),
};
$ const adListInput = {
  section: { hierarchy: section.hierarchy },
  name: 'load-more',
  size: [300, 600],
  modifiers: ['in-card'],
  ...getAsObject(input, 'ads.list'),
};
$ const nativeX = getAsObject(input, 'nativeX');
$ const nativeXEnabled = useNativeX(nativeX.placement, nativeX.index, site);
$ const imageOptions = { w: 630, h: 270, fit: "crop", crop: "focalpoint", fpX: 0.5, fpY: 0.5 };

<cms-query-website-scheduled-content|{ nodes, pageInfo }| ...query>
  $ const cardNodes = asArray(nodes.slice(0, 10));
  $ const listNodes = asArray(nodes.slice(10));
  <if(cardNodes.length || listNodes.length)>
    <cms-gtm-track-inview-event name="page_load" vars={ page_number: pageNumber + 1 } />
    <div class=block>
      <if(cardNodes.length)>
        <div class="row">
          <for|content, index| of=cardNodes>
            <div class=`${block}__col`>
              <if(nativeXEnabled && index === nativeX.index)>
                $ const section = getAsObject(content, 'primarySection');
                $ const image = getAsObject(content, 'primaryImage');
                <endeavor-nativex-placement
                  name=nativeX.placement
                  fallback-vars={
                    url: content.canonicalPath,
                    content: { title: content.shortName, type: content.typeTitled, published: content.publishedDate },
                    image: { src: buildImgixUrl(image.src, imageOptions, undefined, image.isLogo), alt: image.alt },
                    section: { name: section.name },
                  }
                />
              </if>
              <else>
                <endeavor-content-block-item
                  content=content
                  image-modifiers=["fluid", "21by9"]
                  image-options=imageOptions
                  image-position="top"
                  modifiers=["card"]
                />
              </else>
            </div>
            <if(index === 1 || index === 6)>
              <div class=`${block}__col`>
                <endeavor-gam-ad-unit-define-display ...adCardInput/>
              </div>
            </if>
          </for>
        </div>
      </if>

      <if(listNodes.length)>
        <div class="row">
          <div class=`${block}__col-ad`>
            <endeavor-gam-ad-unit-define-display ...adListInput />
          </div>

          <div class=`${block}__col-list`>
            <endeavor-item-list flush=true card=true items=listNodes>
              <@item|{ item }|>
                <endeavor-content-block-item
                  content=item
                  image-position="left"
                  image-options={ w: 176, h: 99, fit: 'crop', crop: 'focalpoint', fpX: 0.5, fpY: 0.5 }
                  image-width=176
                  image-height=99
                />
              </@item>
            </endeavor-item-list>
          </div>
        </div>
      </if>
    </div>
    $ const { endCursor, hasNextPage } = pageInfo;
    $ delete query.skip;
    $ delete query.queryFragment;
    $ delete query.renderBody;
    $ query.after = endCursor;
    $ delete input.section;
    $ const provide = {
      ...input,
      query,
      ads: {
        card: adCardInput,
        list: adListInput,
      },
    };

    <endeavor-load-more-button
      append-to=".container-fluid-max"
      block-name=block
      label="Load More Content"
      max-pages=loadMore.maxPages
      page-number=pageNumber
      provide=provide
      show=hasNextPage
    />
  </if>
</cms-query-website-scheduled-content>
