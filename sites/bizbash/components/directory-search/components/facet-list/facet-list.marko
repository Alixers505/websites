import querystring from 'querystring';

$ const { req } = out.global;

$ const {
  facets,
  paramName,
  activeIds,
} = input;

$ const activeId = req.query[paramName];
$ const isActiveId = (id) => (activeId && (`${activeId}` === `${id}`));

$ const clean = q => Object.keys(q).reduce((o, key) => {
  const value = q[key];
  if (!value) return o;
  return { ...o, [key]: value };
}, {});

$ const facetUrl = (id) => {
  const query = { ...req.query };
  delete query.page;
  if (isActiveId(id)) {
    delete query[paramName];
  } else {
    query[paramName] = id;
  }
  const string = querystring.stringify(clean(query));
  return string ? `${req.path}?${string}` : req.path;
};

<if(facets.length)>
  <ul>
    <for|facet| of=facets>
      $ const isOpen = activeIds.includes(facet.id);
      $ const isActive = isActiveId(facet.id);

      $ const classNames = ["facet", `facet--${facet.id}`];
      $ if (isOpen) classNames.push("facet--open");
      $ if (isActive) classNames.push("facet--active");

      <li class=classNames>
        <a href=facetUrl(facet.id)> ${facet.name}</a>
        <if(Array.isArray(facet.values))>
          <cms-browser-component name="PlusMinusToggleButton" props={ targets: [`.facet--${facet.id}`], toggleClass: "facet--open", initiallyExpanded: isOpen } />
          <facet-list facets=facet.values param-name=paramName active-ids=activeIds />
        </if>
      </li>
    </for>
  </ul>
</if>
