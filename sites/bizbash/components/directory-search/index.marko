import markets from './markets';
import findActiveFacet from './find-active-facet';
import cloudfront from '../../services/cloud-front-search';

$ const isDevelopment = process.env.NODE_ENV === 'development';
$ const { req, onAsyncBlockError } = out.global;
$ const { phrase = '', topicId, marketId, page = 1 } = req.query;

$ const activeTopic = findActiveFacet(input.topics, topicId);
$ const activeMarket = findActiveFacet(markets, marketId);

$ const searchParams = {
  ...input.searchOptions,
  contentType: input.contentType,
  pageNumber: page,
  phrase,
  facets: [
    { field: 'market', value: marketId },
    { field: 'topic', value: topicId },
  ]
};

<div class="row">
  <div class="col mb-block">
    <form class="directory-search">
      <input name="phrase" type="search" class="form-control directory-search__input" placeholder="Enter search phrase..." value=phrase>
      <if(marketId)><input name="marketId" type="hidden" value=marketId></if>
      <if(topicId)><input name="topicId" type="hidden" value=topicId></if>
      <button type="submit" class="btn btn-primary directory-search__button">Search</button>
    </form>
  </div>
</div>
<div class="row">
  <div class="col-md-5 col-lg-4 mb-block">
    <div class="directory-facets-toggle">
      <div class="directory-facets-toggle__label">Show Filters</div>
      <cms-browser-component
        name="PlusMinusToggleButton"
        props={
          className: 'directory-facets-toggle__button',
          targets: ['.directory-facets'],
          toggleClass: 'directory-facets--open'
        }
      />
    </div>
    <facet-container
      facets=markets
      title="Market"
      param-name="marketId"
      active-ids=activeMarket.activeIds
    />
    <facet-container
      facets=input.topics
      title="Category"
      param-name="topicId"
      active-ids=activeTopic.activeIds
    />
  </div>
  <div class="col-md-7 col-lg-8 mb-block">
    <await(cloudfront.search(searchParams))>
      <!-- @todo Add pagination / load more -->
      <@then|{ hits }|>
        <search-hits hits=hits />
      </@then>
      <@catch|err|>
        $ if (typeof onAsyncBlockError === 'function') onAsyncBlockError(err);
        <pre>An unexpected error occurred: ${err.message}</pre>
        <if(isDevelopment)>
          <pre>${err.stack}</pre>
        </if>
      </@catch>
    </await>
    <!-- <ul class="item-list"> -->
      <!-- <div class="feature-results">
        <if(topicId && marketId)>
          <bizbash-pinned-directory-card|{ content }| section-id=Number(topic) market-id=Number(market)>
            <if(content)>
              $ const primarySection = getAsObject(content, 'primarySection');
              $ const primaryImage = getAsObject(content, 'primaryImage');
              $ const dateFormat = 'MMMM D, YYYY';
              $ const imageInput = {
                image: primaryImage,
                lazyload: false,
                linkTo: content,
                modifiers: ['fluid', '3by2'],
                options: { w: 642, h: 428, fit: 'crop', crop: 'focalpoint', fpX: 0.5, fpY: 0.5 },
                position: 'top',
                usePlaceholder: false,
                ...getAsObject(input, 'image'),
              };
              <div class="featured-directory-listing-item">
                <div class="sponsoreship-title">
                  ${activeTopic[0].name} by ${content.shortName}
                </div>
                <endeavor-item modifiers=["card", "hero-card"]>

                  <@image ...imageInput />
                  <@title tag="h5" modifiers=["medium"]>
                    <cms-content-short-name tag=null obj=content link=true />
                  </@title>
                  <@description tag="p">
                    ${content.address1}<br>
                    ${content.city}, ${content.state} ${content.zip} ${content.country}
                  </@description>
                </endeavor-item>
              </div>
            </if>
          </bizbash-pinned-directory-card>
        </if>
      </div> -->
    <!-- </ul> -->
  </div>
</div>
