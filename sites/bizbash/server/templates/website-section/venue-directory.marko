import { getAsObject, getAsArray, get } from '@base-cms/object-path';
import { retrieve, retrieveResults, getFacetUrl, generateResultImage, getPaginationInfo, getPaginationLink } from '../../../services/cloud-front-search';

$ const { site, req } = out.global;
$ const fetch = require('node-fetch');
$ const section = getAsObject(data, 'section');

$ const staticFacets = {
  market: {
    name: "Market",
    facetType: 'market',
    values: [
      {
        id: 2000027,
        name: "Atlanta",
      },
      {
        id: 2000028,
        name: "Atlantic City",
      },
      {
        id: 2000029,
        name: "Austin",
      },
      {
        id: 2000023,
        name: "Boston",
      },
      {
        id: 2000021,
        name: "Chicago",
      },
      {
        id: 2000030,
        name: "Dallas/Fort Worth",
      },
      {
        id: 2000031,
        name: "Houston",
      },

      {
        id: 2000024,
        name: "Las Vegas",
      },
      {
        id: 2000017,
        name: "Los Angeles",
      },
        {
        id: 2000025,
        name: "Miami/South Florida",
      },
      {
        id: 2000038,
        name: "Montreal",
      },
      {
        id: 2000016,
        name: "New York",
      },
      {
        id: 2000026,
        name: "Orlando/Central Florida",
      },
      {
        id: 2000034,
        name: "Philadelphia",
      },
      {
        id: 2000035,
        name: "Phoenix/Scottsdale",
      },
      {
        id: 2000036,
        name: "San Diego",
      },
      {
        id: 2000037,
        name: "San Francisco",
      },
      {
        id: 2000020,
        name: "Toronto",
      },

      {
        id: 2000018,
        name: "Washington, D.C.",
      },
      {
        id: 3125552,
        name: "Vancouver",
      },
    ],
  },
  topic: {
    name: "Categories",
    facetType: "topic",
    values: [
      {
        id: 62670,
        name: "Academic Facilities",
      },
      {
        id: 62671,
        name: "Activity Venues",
        childFacets: [
          {
            id: 62672,
            name: "Arcades/Virtual Reality Centers",
            parent: 62671
          },
          {
            id: 62673,
            name: "Bowling Alleys",
            parent: 62671
          },
          {
            id: 62674,
            name: "Cooking Schools & Tasting Venues",
            parent: 62671
          },
          {
            id: 62675,
            name: "Dance Class Venues",
            parent: 62671
          },
          {
            id: 62676,
            name: "Golf (Miniature or Driving Ranges)",
            parent: 62671
          },
          {
            id: 62677,
            name: "Horseback Riding Centers",
            parent: 62671
          },
          {
            id: 62678,
            name: "Other Activities",
            parent: 62671
          },
          {
            id: 62679,
            name: "Pool & Billiard Halls",
            parent: 62671
          },
          {
            id: 62680,
            name: "Sports Venues",
            parent: 62671
          },
          {
            id: 62681,
            name: "Tour Buses & Vans",
            parent: 62671
          },
          {
            id: 62682,
            name: "Wine Tasting Spaces",
            parent: 62671
          },
          {
            id: 62683,
            name: "Wineries/Breweries/Distilleries",
            parent: 62671
          },
        ],
      },
      {
        id: 62684,
        name: "Atriums/Lobbies (All Venues)",
      },
      {
        id: 62490,
        name: "Ballrooms (All Venues)",
      },
      {
        id: 62491,
        name: "Banquet & Reception Halls",
      },
      {
        id: 62492,
        name: "Bars/Nightclubs/Lounges",
        childFacets: [
          {
            id: 62493,
            name: "All Bars/Nightclubs/Lounges with Private Space/V.I.P. Rooms",
            parent: 62492
          },
          {
            id: 62494,
            name: "All Bars/Nightclubs/Lounges with Semiprivate Space",
            parent: 62492
          },
          {
            id: 62495,
            name: "Bars/Lounges",
            parent: 62492
          },
          {
            id: 62496,
            name: "Beer Gardens",
            parent: 62492
          },
          {
            id: 62497,
            name: "Breweries/Pubs",
            parent: 62492
          },
          {
            id: 62498,
            name: "Hotel Bars",
            parent: 62492
          },
          {
            id: 62499,
            name: "Large Nightclubs",
            parent: 62492
          },
          {
            id: 62500,
            name: "Sports Bars",
            parent: 62492
          },
          {
            id: 62501,
            name: "Wine/Champagne Bars",
            parent: 62492
          },
        ],
      },
      {
        id: 62685,
        name: "Boats/Cruises",
        childFacets: [
          {
            id: 62686,
            name: "Boats",
            parent: 62685
          },
          {
            id: 62687,
            name: "Cruise Lines",
            parent: 62685
          },
          {
            id: 62688,
            name: "Yachts",
            parent: 62685
          },
        ],
      },
      {
        id: 62689,
        name: "Casinos",
      },
      {
        id: 62502,
        name: "Conference Centers, Convention Centers & Auditoriums",
        childFacets: [
          {
            id: 62503,
            name: "Auditoriums",
            parent: 62502
          },
          {
            id: 62504,
            name: "Conference & Meeting Spaces",
            parent: 62502
          },
          {
            id: 62505,
            name: "Conference Centers",
            parent: 62502
          },
          {
            id: 62506,
            name: "Convention Centers",
            parent: 62502
          },
        ],
      },
      {
        id: 62690,
        name: "Entertainment Venues/Performance Spaces",
        childFacets: [
          {
            id: 62691,
            name: "Comedy Clubs",
            parent: 62690
          },
          {
            id: 62692,
            name: "Movie Theaters",
            parent: 62690
          },
          {
            id: 62693,
            name: "Music Clubs",
            parent: 62690
          },
          {
            id: 62694,
            name: "Screening Rooms",
            parent: 62690
          },
          {
            id: 62695,
            name: "Theaters/Performance Spaces",
            parent: 62690
          },
        ],
      },
      {
        id: 62696,
        name: "Golf Courses/Country Clubs",
      },
      {
        id: 62697,
        name: "Hotels",
        childFacets: [
          {
            id: 62698,
            name: "Airport Hotels",
            parent: 62697
          },
          {
            id: 62699,
            name: "All Hotels by Size",
            parent: 62697
          },
          {
            id: 62700,
            name: "Conference Centers",
            parent: 62697
          },
          {
            id: 62701,
            name: "Executive Suites",
            parent: 62697
          },
          {
            id: 62702,
            name: "Full-Service Hotels",
            parent: 62697
          },
          {
            id: 62703,
            name: "Hotels With Meeting/Event Space",
            parent: 62697
          },
          {
            id: 62704,
            name: "Long-Term Accommodations",
            parent: 62697
          },
          {
            id: 62705,
            name: "Luxury Hotels",
            parent: 62697
          },
          {
            id: 62706,
            name: "Resorts/Spas & Retreats",
            parent: 62697
          },
          {
            id: 62707,
            name: "Staff Accommodations",
            parent: 62697
          },
        ],
      },

      {
        id: 62507,
        name: "Independent Event Spaces",
      },
      {
        id: 62708,
        name: "Lake, River, or Oceanfront (All Venues)",
      },
      {
        id: 62508,
        name: "Lofts/Photo Studios/Raw Spaces",
        childFacet: [
          {
            id: 62509,
            name: "Pop-ups/Temporary Spaces",
            parent: 62508
          },
        ]
      },

      {
        id: 62709,
        name: "Mansions/Houses",
      },
      {
        id: 62710,
        name: "Movie Studios/Sound Stages",
      },
      {
        id: 62711,
        name: "Museums/Cultural Spaces",
        childFacet: [
          {
            id: 62712,
            name: "Art Galleries/Art Spaces/Auction Houses",
            parent: 62711
          },
          {
            id: 62713,
            name: "Art Museums",
            parent: 62711
          },
          {
            id: 62714,
            name: "Children's Museums",
            parent: 62711
          },
          {
            id: 62715,
            name: "Cultural Organizations",
            parent: 62711
          },
          {
            id: 62716,
            name: "Embassies & Consulates",
            parent: 62711
          },
          {
            id: 62717,
            name: "Film/Media Museums",
            parent: 62711
          },
          {
            id: 62718,
            name: "Historic Houses",
            parent: 62711
          },
          {
            id: 62719,
            name: "Historical/Cultural Institutions",
            parent: 62711
          },
          {
            id: 62720,
            name: "Science/Natural History Museums",
            parent: 62711
          },
        ],
      },
      {
        id: 62721,
        name: "Outdoor Spaces",
        childFacet: [
          {
            id: 62722,
            name: "All Outdoor Venues",
            parent: 62721
          },
          {
            id: 62723,
            name: "Amphitheaters",
            parent: 62721
          },
          {
            id: 62724,
            name: "Parks/Lawns/Plazas",
            parent: 62721
          },
          {
            id: 62725,
            name: "Piers/Beaches",
            parent: 62721
          },
          {
            id: 62726,
            name: "Swimming Pool Decks",
            parent: 62721
          },
        ],
      },
      {
        id: 62727,
        name: "Private Clubs",
      },
      {
        id: 62728,
        name: "Quick Trips",
        childFacet: [
          {
            id: 62729,
            name: "Conference/Convention Centers",
            parent: 62728
          },
          {
            id: 62730,
            name: "Event Spaces",
            parent: 62728
          },
          {
            id: 62731,
            name: "Golf Courses/Clubs",
            parent: 62728
          },
          {
            id: 62732,
            name: "Hotels/Inns/Casinos",
            parent: 62728
          },
          {
            id: 62733,
            name: "Manor Houses",
            parent: 62728
          },
          {
            id: 62734,
            name: "Museums/Attractions",
            parent: 62728
          },
          {
            id: 62735,
            name: "Resorts/Retreats/Spas",
            parent: 62728
          },
          {
            id: 62736,
            name: "Sports/Activity Venues",
            parent: 62728
          },
        ],
      },
      {
        id: 62737,
        name: "Religious Spaces",
      },
      {
        id: 62738,
        name: "Resorts",
      },
      {
        id: 62510,
        name: "Restaurants",
        childFacet: [
          {
            id: 62511,
            name: "All Restaurants",
            parent: 62510
          },
          {
            id: 62512,
            name: "All Restaurants With Private Rooms",
            parent: 62510
          },
          {
            id: 62513,
            name: "All Restaurants With Semiprivate Space",
            parent: 62510
          },
          {
            id: 62514,
            name: "Asian Restaurants",
            parent: 62510
          },
          {
            id: 62515,
            name: "Barbecue",
            parent: 62510
          },
          {
            id: 62516,
            name: "Caribbean Restaurants",
            parent: 62510
          },
          {
            id: 62517,
            name: "Casual American Restaurants",
            parent: 62510
          },
          {
            id: 62518,
            name: "French Restaurants",
            parent: 62510
          },
          {
            id: 62519,
            name: "German/Austrian Restaurants",
            parent: 62510
          },
          {
            id: 62520,
            name: "Greek Restaurants",
            parent: 62510
          },
          {
            id: 62521,
            name: "Hotel Restaurants",
            parent: 62510
          },
          {
            id: 62522,
            name: "Indian Restaurants",
            parent: 62510
          },
          {
            id: 62523,
            name: "Italian Restaurants",
            parent: 62510
          },
          {
            id: 62524,
            name: "Japanese Including Sushi Restaurants",
            parent: 62510
          },
          {
            id: 62525,
            name: "Kosher Restaurants",
            parent: 62510
          },
          {
            id: 62526,
            name: "Latin Restaurants",
            parent: 62510
          },
          {
            id: 62527,
            name: "Mediterranean Restaurants",
            parent: 62510
          },
          {
            id: 62528,
            name: "Mexican Restaurants",
            parent: 62510
          },
          {
            id: 62529,
            name: "New American Restaurants",
            parent: 62510
          },
          {
            id: 62530,
            name: "Portuguese Restaurants",
            parent: 62510
          },
          {
            id: 62531,
            name: "Russian/Eastern European Restaurants",
            parent: 62510
          },
          {
            id: 62532,
            name: "Seafood Restaurants",
            parent: 62510
          },
          {
            id: 62533,
            name: "Steak Houses",
            parent: 62510
          },
          {
            id: 62534,
            name: "Thai/Vietnamese Restaurants",
            parent: 62510
          },
          {
            id: 62535,
            name: "Vegetarian Restaurants",
            parent: 62510
          },
        ],
      },
      {
        id: 62739,
        name: "Retail Venues",
      },
      {
        id: 62740,
        name: "Spas (Day)/Relaxation Places/Salons",
      },
      {
        id: 62741,
        name: "Stadiums/Arenas",
      },
      {
        id: 62742,
        name: "Terraces/Roofs/Gardens/Patios (All Venues)",
        childFacet: [
          {
            id: 62743,
            name: "Rooftops",
            parent: 62742
          },
        ],
      },
    ],
  }
};
$ const { q = '', topic, market, page = 1 } = req.query;
$ const pageSize = 25;
$ const start = (page - 1) * pageSize;
$ const args = {
  api: 'https://nwmj632le8.execute-api.us-east-1.amazonaws.com/test',
  urlParams: {
    'expr.featured': '_score*((_time > featured_start && _time < featured_end) ? 100 : 1)',
    sort: 'featured desc, modified desc',
    size: pageSize,
    start: start,
    page: page,
    q: q,
  },
  type: "Venue",
  facets: {
    market: market,
    topic: topic,
  },
};
<theme-default-website-section-layout section=section>
  <div class="small" style="max-width:1000px; margin-left:auto; margin-right:auto;">
      <form id="search" class="row" style="padding: 20px; background: #f1f1f1;">
        <div class="col-lg-11 col-md-10 mb-block" >
            <input name="q" type="input" class="form-control" id="search-input" placeholder="keyword" value=q>
          <if(market)>
            <input name="market" type="hidden" value=market>
          </if>
          <if(topic)>
            <input name="topic" type="hidden" value=topic>
          </if>
        </div>
        <div class="col-lg-1 col-md-2 mb-block" >
          <button type="submit" class="btn btn-primary">Search</button>
        </div>
      </form>
      <div class="row">
        <div class="content-query-load-more__col-ad">
        <div class="directory-facets">
          <for|facetTypeKey, facetType| in=staticFacets>
            <ul class="list-group border-0">
              <h3>${facetType.name}</h3>
              <for|key, facet| in=facetType.values>
                <li class="list-group-item border-0">
                  $ const url = getFacetUrl(req, facetTypeKey, facet.id);
                  <a href=`${url}`>${ facet.name } - ${ facet.id }</a>
                  <if(facet.childFacets)>
                    $ const facetTargetToggleClass = `.facet-${facet.id}`;
                    $ const facetTargetToggleOpenClass = `facet-${facet.id}--open`;
                    <cms-browser-component name="PlusMinusToggleButton" props={ targets: [facetTargetToggleClass], toggleClass: 'plus-minus-toggler--open' } />
                    <ul class=`list-group border-0 facet-${facet.id}`>
                      <for|childFacet, index| of=facet.childFacets>
                        <li class="list-group-item border-0">
                          $ const url = getFacetUrl(req, facetTypeKey, childFacet.id);
                          <a href=`${url}`>${ childFacet.name } - ${ childFacet.id }</a>
                        </li>
                      </for>
                    </ul>
                  </if>
                  <!--utton role="button" @click="setFacet(facet)">{{ facet.name }}</button-->
                </li>
              </for>
            </ul>
          </for>
        </div>

        </div>
        <div id="results" class="content-query-load-more__col-list">
          <ul class="item-list ">
            <div id="feature-results" class="">

            </div>
            <div id="search-results" class="">
                <ul class="item-list item-list--flush item-list--card">
                  <div class="item-list__contents">
                  <await(retrieveResults(args))>
                    <@then|response|>
                      <if(response.hits)>
                        <for|result, index| of=response.hits.hit>
                            <li class="item-list__item">
                              <div class="item item--image-left">
                                <div class="item__image">
                                  <a href=`/${result.id}`>
                                    <img src=generateResultImage(result) alt=`${result.fields.name}` width="176" height="99">
                                  </a>
                                </div>
                                <div class="item_contents">
                                  <h5 class="item__title">
                                    <a href=`/${result.id}`>
                                      ${result.fields.name}
                                    </a>
                                  </h5>
                                  <p class="item__teaser">
                                    ${result.fields.address1}<br>
                                    ${result.fields.city}, ${result.fields.state} ${result.fields.zip} ${result.fields.country}
                                  </p>
                                </div>
                              </div>
                            </li>
                        </for>
                        <ul class="list-unstyled d-flex justify-content-between pagination">
                          $ const prevLink = getPaginationLink(req, -1, pageSize, response.hits.found);
                          $ const nextLink = getPaginationLink(req, 1, pageSize, response.hits.found);
                          $ const paginationInfo = getPaginationInfo(start, pageSize, response.hits.found);
                          <li class="previous disabled">
                            <a href=`${prevLink}`><< Previous</a>
                          </li>
                          <li class="current">
                            ${paginationInfo}
                          </li>
                          <li class="next">
                            <a href=`${nextLink}`>
                              Next >>
                            </a>
                          </li>
                        </ul>
                      </if>
                    </@then>
                    <@catch|err|>
                      $ if (typeof onAsyncBlockError === 'function') onAsyncBlockError(err);
                      <if(input.onError)>
                        <${input.onError} err=err />
                      </if>
                      <else>
                        <pre>An unexpected error occurred: ${err.message}</pre>
                      </else>
                    </@catch>
                  </await>
                  </div>
                </ul>
            </div>
          </ul>
        </div>
      </div>
  </div>
</theme-default-website-section-layout>
