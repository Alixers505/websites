import { getAsObject } from '@base-cms/object-path';
import contentListFragment from '@endeavorb2b/base-website-common/api/fragments/content-list';

$ const { site } = out.global;
$ const block = 'content-query-section-list';
$ const params = {
  limit: 200,
  requiresImage: false,
  ...input,
  queryFragment: contentListFragment,
  queryName: 'OGJByYear',
};
$ const header = getAsObject(input, 'header');
$ const description = getAsObject(input, 'description');

$ const groupByYear = (nodes) => {
  const grouped = nodes.reduce((obj, node) => {
    const year = (new Date(node.published)).getFullYear();
    const group = obj[year] || [];
    group.push(node);
    return { ...obj, [year]: group };
  }, {});
  const keys = Object.keys(grouped).sort((a, b) => b - a);
  return keys.map((year) => ({ year, items: grouped[year] }));
};

<cms-query-website-scheduled-content|{ nodes }| ...params>
  <if(nodes.length)>
    $ const grouped = groupByYear(nodes);

    <endeavor-item-list flush=true card=true items=[{}]>
      <if(header.title)>
        <@header href=header.href target=header.target>
          ${header.title}
        </@header>
      </if>
      <if(description.value)>
        <@description>
          ${description.value}
        </@description>
      </if>

      <@item modifiers=["wrap"]>
        <for|{ year, items }, index| of=grouped>
          <div class="col-lg-6 mt-block">
            <endeavor-item-list flush=true card=false items=items>
              <@header modifiers=["secondary"]>${year}</@header>
              <@item|{ item, index }|>
                <endeavor-content-block-item content=item with-image=false />
              </@item>
            </endeavor-item-list>
          </div>
        </for>
      </@item>
    </endeavor-item-list>
  </if>
</cms-query-website-scheduled-content>
